{"version":3,"sources":["NumberDisplay.js","KeyPad.js","App.js","reportWebVitals.js","index.js"],"names":["NumberDisplay","label","numberString","answer","highlighted","length","numbers","Array","from","map","_","index","correct","className","number","KeyPad","onClick","onDelete","App","React","useState","setNumbers","queryParams","URL","window","location","searchParams","rawSecret","get","rawSecretLength","secretLength","secret","slice","numberOfKeyPads","Math","floor","revealText","revealCode","inputStrings","i","push","secretAnswers","numberDisplays","foo","concat","String","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,YACAC,EACC,EADDA,OAEMC,EAAUC,MAAMC,KAAK,CAAEH,WAAUI,KAAI,SAACC,EAAGC,GAAW,IAAD,EACvD,iBAAOT,EAAaS,UAApB,QAA8B,OAG1BC,EAAUT,IAAWD,EAC3B,OACE,mCACE,sBACEW,UAAS,yBACPD,EAAU,0BAA4B,GAD/B,YAELR,EAAc,8BAAgC,IAHpD,UAKE,qBAAKS,UAAU,wBAAf,SAAwCZ,IACxC,qBAAKY,UAAU,4BAAf,SACGP,EAAQG,KAAI,SAACK,GACZ,OAAO,sBAAMD,UAAU,wBAAhB,SAAyCC,c,MCtB7C,SAASC,EAAT,GAAwC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACxC,OACE,qCACE,sBAAKJ,UAAU,MAAf,UACE,wBAAQA,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,eAGA,wBAAQH,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,eAGA,wBAAQH,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,kBAIF,sBAAKH,UAAU,MAAf,UACE,wBAAQA,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,eAGA,wBAAQH,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,eAGA,wBAAQH,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,kBAIF,sBAAKH,UAAU,MAAf,UACE,wBAAQA,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,eAGA,wBAAQH,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,eAGA,wBAAQH,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,kBAIF,sBAAKH,UAAU,MAAf,UACE,wBAAQA,UAAU,OAAOG,QAAS,kBAAMA,EAAQ,IAAhD,eAGA,wBAAQH,UAAU,OAAOG,QAAS,kBAAMC,KAAxC,qB,MCmCOC,MAnEf,WA0BE,IA1Bc,IAAD,EACiBC,IAAMC,SAAS,IADhC,mBACNd,EADM,KACGe,EADH,KAaPC,EAAc,IAAIC,IAAIC,OAAOC,UAAUC,aACvCC,EAAYL,EAAYM,IAAI,SAnBd,mBAoBdC,EAAkBF,EAAUtB,OAE5ByB,EAAeD,EAAmBA,EAnBrB,EAoBbE,EAASJ,EAAUK,MAAM,EAAGF,GAC5BG,EAAkBC,KAAKC,MAAML,EAAe,GAE5CM,EAAad,EAAYM,IAAI,eAxBX,kCAyBlBS,EAAaf,EAAYM,IAAI,eA1BX,WA6BpBU,EAAe,GACVC,EAAE,EAAGA,EAAEN,EAAiBM,IAC/BD,EAAaE,KAAKlC,EAAQ0B,MA7BT,EA6BeO,EA7Bf,IA6B4CA,IAI/D,IADA,IAAIE,EAAgB,GACXF,EAAE,EAAGA,EAAEN,EAAiBM,IAC/BE,EAAcD,KAAKT,EAAOC,MAlCT,EAkCeO,EAlCf,IAkC4CA,IAE/D,IAAMG,EAAiBJ,EAAa7B,KAAI,SAACkC,EAAKhC,GAAN,OACtC,cAAC,EAAD,CACEV,MAAK,cAASU,EAAO,GACrBN,OAvCe,EAwCfH,aAAcoC,EAAa3B,GAC3BR,OAAQsC,EAAc9B,GACtBP,YAAaE,EAAQD,OA1CN,EA0C6BM,GAAUL,EAAQD,OA1C/C,EA0CsEM,EA1CtE,OA8CnB,OACE,qBAAKE,UAAU,MAAf,SACGP,IAAYyB,EACX,sBAAKlB,UAAU,gBAAf,UACE,qBAAKA,UAAU,uBAAf,SACG6B,IAEH,qBAAK7B,UAAU,wBAAf,SACE,cAAC,EAAD,CAAQG,QAjDlB,SAAsBF,GAChBR,EAAQD,OAASyB,GACnBT,GAAW,SAACf,GAAD,OAAaA,EAAQsC,OAAOC,OAAO/B,QA+CTG,SA3CzC,WACEI,GAAW,SAACf,GAAD,OAAaA,EAAQ0B,MAAM,EAAG1B,EAAQD,OAAS,cA8CtD,qBAAKQ,UAAU,OAAOiC,IAAI,OAA1B,SACN,uBAAMjC,UAAU,eAAhB,UACKuB,EAAW,uBACXC,UCzDQU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c738d614.chunk.js","sourcesContent":["import \"./NumberDisplay.css\";\n\nexport default function NumberDisplay({\n  label,\n  numberString,\n  answer,\n  highlighted,\n  length,\n}) {\n  const numbers = Array.from({ length }).map((_, index) => {\n    return numberString[index] ?? \"-\";\n  });\n\n  const correct = answer === numberString;\n  return (\n    <>\n      <div\n        className={`number-display ${\n          correct ? \"number-display--correct\" : \"\"\n        } ${highlighted ? \"number-display--highlighted\" : \"\"}`}\n      >\n        <div className=\"number-display__label\">{label}</div>\n        <div className=\"number-display__container\">\n          {numbers.map((number) => {\n            return <span className=\"number-display__digit\">{number}</span>;\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","import \"./KeyPad.css\";\n\nexport default function KeyPad({ onClick, onDelete }) {\n  return (\n    <>\n      <div className=\"row\">\n        <button className=\"cell\" onClick={() => onClick(1)}>\n          1\n        </button>\n        <button className=\"cell\" onClick={() => onClick(2)}>\n          2\n        </button>\n        <button className=\"cell\" onClick={() => onClick(3)}>\n          3\n        </button>\n      </div>\n      <div className=\"row\">\n        <button className=\"cell\" onClick={() => onClick(4)}>\n          4\n        </button>\n        <button className=\"cell\" onClick={() => onClick(5)}>\n          5\n        </button>\n        <button className=\"cell\" onClick={() => onClick(6)}>\n          6\n        </button>\n      </div>\n      <div className=\"row\">\n        <button className=\"cell\" onClick={() => onClick(7)}>\n          7\n        </button>\n        <button className=\"cell\" onClick={() => onClick(8)}>\n          8\n        </button>\n        <button className=\"cell\" onClick={() => onClick(9)}>\n          9\n        </button>\n      </div>\n      <div className=\"row\">\n        <button className=\"cell\" onClick={() => onClick(0)}>\n          0\n        </button>\n        <button className=\"cell\" onClick={() => onDelete()}>\n          &lt;\n        </button>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport NumberDisplay from \"./NumberDisplay\";\nimport KeyPad from \"./KeyPad.js\";\nimport \"./App.css\";\n\nconst defaultSecret = \"9257148270093361\";\nconst defaultRevealCode = \"16 08 12\";\nconst defaultRevealText = \"Koden till kassaskåpet är\";\nconst sizeOfKeypad = 4;\n\nfunction App() {\n  const [numbers, setNumbers] = React.useState(\"\");\n\n  function handleNumber(number) {\n    if (numbers.length < secretLength) {\n      setNumbers((numbers) => numbers.concat(String(number)));\n    }\n  }\n\n  function handleDelete() {\n    setNumbers((numbers) => numbers.slice(0, numbers.length - 1));\n  }\n\n  const queryParams = new URL(window.location).searchParams;\n  const rawSecret = queryParams.get('code') || defaultSecret;\n  const rawSecretLength = rawSecret.length;\n\n  const secretLength = rawSecretLength - (rawSecretLength % sizeOfKeypad);\n  const secret = rawSecret.slice(0, secretLength);\n  const numberOfKeyPads = Math.floor(secretLength / 4);\n\n  const revealText = queryParams.get('revealText') || defaultRevealText;\n  const revealCode = queryParams.get('revealCode') || defaultRevealCode;\n\n\n  let inputStrings = [];\n  for (let i=0; i<numberOfKeyPads; i++) {\n    inputStrings.push(numbers.slice(i*sizeOfKeypad, sizeOfKeypad+i*sizeOfKeypad));\n  }\n\n  let secretAnswers = [];\n  for (let i=0; i<numberOfKeyPads; i++) {\n    secretAnswers.push(secret.slice(i*sizeOfKeypad, sizeOfKeypad+i*sizeOfKeypad));\n  }\n  const numberDisplays = inputStrings.map((foo, index)=> (\n    <NumberDisplay\n      label={`Kod ${index +1}`}\n      length={sizeOfKeypad}\n      numberString={inputStrings[index]}\n      answer={secretAnswers[index]}\n      highlighted={numbers.length > (sizeOfKeypad*index) && numbers.length < (sizeOfKeypad*index + sizeOfKeypad)}\n    />\n  ));\n\n  return (\n    <div className=\"App\">\n      {numbers !== secret ? (\n        <div className=\"safe centered\">\n          <div className=\"safe__codes centered\">\n            {numberDisplays}\n          </div>\n          <div className=\"safe__keypad centered\">\n            <KeyPad onClick={handleNumber} onDelete={handleDelete} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"hint\" alt=\"hint\" >\n\t\t<span className='reveal__code'>\n      {revealText}<br/>\n      {revealCode}\n      </span>\n\t</div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}